. ./config
filteredtags=
starttag=
commits=
cveid=
curdir=`pwd`
repfile="$curdir/report.html"


get_tags ()
{
    for i in $@
    do
        tags=$(git tag --list --sort=taggerdate --contains $i)
        filteredtags=$(echo "$tags"|grep -E "$TAGS_REGEX" | tr '\n' ' ')
        starttag=$(echo "$tags"| head -1)
    done
}

find_commit_cve ()
{
        commits=""
        log=$(git log --grep="$cveid" -i)
        if [ "$log" != "" ]
        then
            commits=$(echo "$log" | grep "^commit"|cut -d" " -f2 | tr '\n' ' ')
        fi
}

add_multi_to_report ()
{
    for var in $@
    do
        echo "$var</br>" >> $repfile
    done
}
add_refs_to_report ()
{
    for ref in $@
    do
        echo "<a href="$ref" target="_blank">$ref</a></br>" >> $repfile
    done
}

add_commits_to_report()
{
    cd $REPODIR
    echo "<td colspan=3>" >> $repfile
    echo "<table>" >> $repfile
    for commit in $@
    do
        echo "<tr>" >> $repfile
        echo "<td>" >> $repfile
        echo $commit >> $repfile
        echo "</td>" >> $repfile

        get_tags $commit
        echo "<td>" >> $repfile
        echo "$starttag" >> $repfile
        echo "</td>" >> $repfile

        echo "<td>" >> $repfile
        add_multi_to_report "$filteredtags"
        echo "</td>" >> $repfile
        echo "<tr>" >> $repfile
    done
    echo "</table>" >> $repfile
    echo "</td>" >> $repfile
    cd $curdir
}

process_cve()
{
    cveid=$1
    commits=
    refs=
    desc=
    filteredtags=
    starttag=
    commits=

    ((count++))

    echo -ne "\rProcessing $cveid [$count/$cvecount]"
    file=$cveid
    wget https://nvd.nist.gov/vuln/detail/$cveid > /dev/null 2>&1

    if [ -f $file ]
    then
        sed -i "s/\r//g" $file
        desc=$(cat $file | grep "\"vuln-description\"" |sed -e 's/<[^>]*>//g' -e 's/^ *//g')
        # refs=$(cat $file | grep "vuln-hyperlinks-link-.*\"" | sed -e 's/<[^>]*>//g' -e 's/^ *//g')
        refs=$(awk '/<td data-testid="vuln-hyperlinks-link-/,/<\/td>/' $file| grep "target" | sed -e 's/<[^>]*>//g' -e 's/^[\t ]*//g' -e 's/.*>//g')
        commits=$(echo "$refs" | grep "$GIT_REPO_PATTERN" |awk -F${COMMIT_PATTERN} '{print $2}')

        # echo $desc
        # echo $refs
        # echo $commits

        cd $REPODIR
        if [ "$commits" == "" ]
        then
            find_commit_cve
        fi
        commits=`printf %s "$commits" | awk '{ if (!comarr[$0]++) {printf("%s%s",!ln++?"":" ",$0)}}'`

        # commits=$(echo $commits|tr ' ' '\n'|sort|uniq|tr '\n' ' ')
        cd $curdir

        echo "<tr>" >> $repfile
        echo "<td>" >> $repfile
        echo $count >> $repfile
        echo "</td>" >> $repfile
        echo "<td>" >> $repfile
        echo $cveid >> $repfile
        echo "</td>" >> $repfile
        echo "<td>" >> $repfile
        echo $desc >> $repfile
        echo "</td>" >> $repfile
        echo "<td>" >> $repfile
        add_refs_to_report "$refs"
        echo "</td>" >> $repfile
        add_commits_to_report $commits
        echo "</tr>" >> $repfile
        rm -rf $file
    else
        echo "<tr>" >> $repfile
        echo "<td>" >> $repfile
        echo $count >> $repfile
        echo "</td>" >> $repfile
        echo "<td>" >> $repfile
        echo $cveid >> $repfile
        echo "</td>" >> $repfile
        echo "<td>" >> $repfile
        echo "No page found in https://nvd.nist.gov" >> $repfile
        echo "</td>" >> $repfile
        echo "</tr>" >> $repfile
    fi
}

if [ "$REPODIR" == "" ]
then
    git clone $GIT_REPO_URL repodir
    REPODIR="./repodir"
fi

echo "<html><head><style>
table {
    font-family: arial, sans-serif;
    border-collapse: collapse;
    width: 100%;
}

td, th {
    border: 1px solid #dddddd;
    text-align: left;
    padding: 8px;
}

tr:nth-child(even) {
    background-color: #dddddd;
}
</style>
</head>" > $repfile
echo "<body>" >> $repfile
echo "<table>" >> $repfile

echo "<tr> 
        <th>S.No</th> 
        <th>CVEID</th> 
        <th>Description</th> 
        <th>References</th> 
        <th>Commits</th> 
        <th>Fix started from</th> 
        <th>Tags with fix</th> 
        </tr>" >> $repfile

cvecount=$(cat $CVE_IDS_FILE| wc -l)
count=0

if [ "$1" == "" ]
then
    for tmpid in $(cat $CVE_IDS_FILE)
    do
        process_cve $tmpid
    done
else
    process_cve $(cat $CVE_IDS_FILE | head -$1 |tail -1)
fi

echo "</table></body></html>" >> $repfile
